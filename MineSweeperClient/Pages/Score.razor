@page "/score"

@using MineSweeperLogic

@inject IGame _game
@inject ILogger _logger

<PageTitle>Score</PageTitle>

<div class="container text-center" hidden=@InPutUserNameVisible()>
    <h1>Your name</h1>
    <EditForm Model="@_game" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <p>
            <label>
                Username:
                <InputText @bind-Value="_game.UserName" />
            </label>
        </p>

        <button type="submit">Submit</button>
    </EditForm>
</div>

<div class="container text-center" hidden=@InPutUserNameHidden()>
    <h1>High scores</h1>
    <div class="logger" id="collapseExample">
        <table class="table table-bordered">
            <tr>
                <th>Username</th>
                <th>Score</th>
            </tr>
            @foreach (var score in _game.HighScore.OrderBy(a => a.Score))
            {
                <tr>
                    <td>
                        @score.UserName
                    </td>
                    <td>
                        @score.Score
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

@code {

    public bool InPutUserNameVisible()
    {
        return !string.IsNullOrEmpty(_game.UserName);
    }

    public bool InPutUserNameHidden()
    {
        return string.IsNullOrEmpty(_game.UserName);
    }

    private void HandleValidSubmit()
    {
        _game.SaveScore();
    }

    protected override async Task OnInitializedAsync()
    {
        if (!InPutUserNameHidden())
        {
            //_game.SaveScore();
        }
    }
}
