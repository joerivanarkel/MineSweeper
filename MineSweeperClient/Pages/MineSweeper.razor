@page "/minesweeper"
@using MineSweeperClient.Components
@using MineSweeperLogic
@inject NavigationManager _navigationManager
@inject IGame _game
@inject ILogger _logger

<PageTitle>Play MineSweeper</PageTitle>

<div class="game-card">
    <GameHeader Game="@_game" OnReset="Reset" />

    <div class="board-wrapper">
        <GameBoard Game="@_game" 
                   OnCellClick="HandleCellClick" 
                   OnCellRightClick="HandleCellRightClick" />
    </div>

    <div class="controls text-center">
        <a href="" class="btn btn-secondary">
            <span class="oi oi-home"></span> Home
        </a>
        <a href="heightandwidth" class="btn btn-info">
            <span class="oi oi-wrench"></span> Settings
        </a>
    </div>
</div>

<GameModal Show="@(_game.GameState != GameState.Playing)"
           IsWin="@(_game.GameState == GameState.Win)"
           ClickCount="@_logger.ClickCount"
           Seconds="@_logger.Seconds"
           OnReset="Reset"
           OnSaveScore="SaveScore"
           OnGoHome="GoHome" />

<div class="container text-center mt-4">
    <div class="row">
        <MineSweeperClient.Components.Logger Logs=@_game.Logger.Logs />
    </div>
</div>

@code {

    private async Task HandleCellClick((int x, int y, MouseEventArgs args) data)
    {
        var (x, y, args) = data;
        Console.WriteLine($"found value z: {x} found value i : {y}");
        var value = args.Button.ToString();
        Console.WriteLine(value);
        
        if (args.Button == 0)
        {
            _game.LeftClicked(x, y);
            _game.WinCheck(x, y);
        }
        else if (args.Button == 1)
        {
            _game.MiddleClicked(x, y);
            _game.WinCheck(x, y);
        }
        else if (args.Button == 2)
        {
            _game.RightClicked(x, y);
        }
        
        StateHasChanged();
    }

    private void HandleCellRightClick((int x, int y) data)
    {
        // Right click handled by mouse down event
    }

    public void Reset()
    {
        _game.Start();
        _navigationManager.NavigateTo(_navigationManager.Uri, forceLoad: true);
    }

    public void SaveScore()
    {
        _navigationManager.NavigateTo("savescore", false);
    }

    public void GoHome()
    {
        _navigationManager.NavigateTo("", false);
    }

    protected override async Task OnInitializedAsync()
    {
        _game.Start();
    }
}
